最初にINOUE-FORTHの理解から始まった
　INOUE-FORTHは基本部分はMASMで、残りはFORTHで記述されていた。そのため、FORTHそのものがよくわかって  
　いない初心者がこれらの情報から実行可能なFORTH処理系へと作成するのは非常に困難であった。  
　当時の子の本だけでそれぞれのFORTH処理系を作り上げていったであろう諸先輩方に尊敬の念を感じます。
　結局、私は行っていた開発がシンタックスエラーが多発する状態のままで、開発の継続を断念しました。

次に、8086CPU版のすべてMASMで記述されたFIG-FORTHのPDF資料を見つけ、途中まで開発していたINOUE-FORTH版  
　をFIG-FORTH版の変更した。  
　まず、これで初めてエラーメッセージをなくすことができた。
　次に、初期表示画面が正常に画面に現れ、キー入力後、ENTERキーの入力で実行結果が画面上に現れるようになった。
　　例）
　　　　ToUnderstandFORTH  (Fig-Forth X64) 0.1
　　　　＜ここでキー入力待ちとなる＞


　今のところ、正常に結果が現れるのは、以下のとおりである。
　　１）数値、+,-,.（ドット）を使った場合は正常な結果が表示されている。  
        例）  入力内容：1 2 + . [enter]  
              出力内容： 3  OK  
　　２）文字列を画面に表示する。
              入力内容：." AAA "  [enter] 
              出力内容：AAA  OK 
　　３）ワード TRACE_ONで画面上に実行される各ワードとその時のレジスタ値が実行とともに表示されていき、  
        TRACE_OFFで元のキー入力画面に戻る。
　　　　例） 入力内容：TRACE_ON 1 . TRACE_OFF [enter] 
　　　　　　　出力内容：　（量が多すぎるので省略するが、1 . をWORDやPFIND等で解析し、実行していく状況が表示される）
　　４）新しいワードを追加していったが、文字数やワード名の間違いが発生した。辞書に登録されているワードを最初から  
       リストアップして、途中でエラー等が発生したときはエラーメッセージを表示するワードを追加した。
　　　　 WORD_ADDR_OF_SERCH_WORD:  = 7ff630642d48   ：これはこのワードの先頭アドレス（ネーム・フィールド・アドレス NFA）
　　　　 WORD_ADDR_OF_SERCH_WORD:  = 7ff630642d18
　　　　 WORD_ADDR_OF_SERCH_WORD:  = 7ff630642ce4
　　　　　　　（最後まで到達したので何も表示しない）

その他は何らかの不具合が観測された。これらの修正にはさらに時間が必要となる見込みである。


///////////////////////　ToUnderstandFORTHの処理の流れ　/////////////////////
１）最も最初にC++ファイルが実行される。その中で、以下が実行されて、ASMファイルが呼び出される。
       Call_Rtn = TestProc(&c);
２）ASMファイルでは、最初に.CODEの一番最初のプロシジャーであるTestProcの先頭の
    アドレス（ ORIG:: ）から実行が始まる。
３）ASMファイルでFORTH処理系が実行される。
４）文字の入出力／ファイルの入出力／キー入力の確認／トレースモードのオンオフ／実行
    の終了を実行する場合はcall call_C_entryを呼び出すことで、ASMの処理を終了して、C++に戻る。
５）C++ではCall_Rtn = TestProc(&c);の次に実行が移る。&Cの構造体の中のCOM_NOが行う
    処理（switch文中のcase）の番号（レジスタRDXの値）、SCANVALが値（レジスタRAXの値）
    を確認して、指定された処理を実行する。
６）処理が完了したので、今度は次の処理を行い、C_Rtn = call_C_exit(&c);を実行することで、
    ASMファイル内の前回実行していた続きのアドレスが呼び出される。
７）３）に処理が移り、ASMファイル内で、FORTH処理系の続きの処理が実行される。



V0.20.01  2024/09/13














